@model BookSearchListingViewModel
@{
    ViewData["Title"] = "Search";
}

<h2>Results for search : @Model.Books.SearchTerm</h2>
<h3>Categories : @(Model.Categories.Any() ? string.Join(" / ", Model.Categories) : "All")</h3>
<hr />

@if (Model.Books.TotalItems == 0)
{
    <h4>No books found matching your search!</h4>
}
else
{
    <div class="row">
        @foreach (var book in Model.Books.Items)
        {

            await Html.RenderPartialAsync("Partials/_BookListingPartial", book);
        }
    </div>
}

<ul class="pagination">
    <li class="@(Model.Books.CurrentPage <= Model.Books.PreviousPage ? "disabled" : "")">
        <a asp-action="Search" asp-route-categories="@Model.Categories" asp-route-searchTerm="@Model.Books.SearchTerm" asp-route-page="@Model.Books.PreviousPage">&laquo;</a>
    </li>

    @for (int i = 1; i <= Model.Books.TotalPages; i++)
    {
        <li class="@(Model.Books.CurrentPage == i ? "active" : "")">
            <a asp-action="Search" asp-route-categories="@Model.Categories" asp-route-searchTerm="@Model.Books.SearchTerm" asp-route-page="@i">@i</a>
        </li>
    }
    <li class="@(Model.Books.CurrentPage >= Model.Books.NextPage ? "disabled" : "")">
        <a asp-action="Search" asp-route-categories="@Model.Categories" asp-route-searchTerm="@Model.Books.SearchTerm" asp-route-page="@Model.Books.NextPage">&raquo;</a>
    </li>
</ul>   