@using BookHeaven.Common.Extensions
@using BookHeaven.Data.Models.Enums
@using Microsoft.AspNetCore.Routing
@model BookDetailsViewModel
@{
    ViewData["Title"] = "Details";
}

<h2>@ViewData["Title"]</h2>
<hr />

<div class="panel panel-default">
    <div class="panel-heading resume-heading">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-4 col-no-padding-left">
                    <div class="row">
                        <div class="col-md-1  vote-col">
                            <div class="vote-div">
                                @{
                                    var upvote = Model.UserVote == VoteValue.Like ? "upvote" : string.Empty;
                                    var downvote = Model.UserVote == VoteValue.Dislike ? "downvote" : string.Empty;
                                    var otherVotes = Model.Rating;
                                    if (upvote != string.Empty)
                                    {
                                        otherVotes--;
                                    }
                                    if (downvote != string.Empty)
                                    {
                                        otherVotes++;
                                    }
                                }
                                <div class="arrow-up @upvote"></div>
                                <div id="rating" val="@otherVotes">@Model.Rating</div>
                                <div class="arrow-down @downvote"></div>
                            </div>
                        </div>
                        <div class="col-md-10">
                            <figure style="margin-top: 30px">
                                <img id="book-picture" alt="Book" class="book-picture" src="@Model.BookPicture.GetPictureUrlOrDefault(ResourceConstants.DefaultBookPictureUrl)" />
                            </figure>
                        </div>
                    </div>

                </div>
                <div class="col-md-8">
                    <div class="row">
                        <div class="col-md-2 list-group-label">
                            <strong>Name:</strong>
                        </div>
                        <div class="col-md-10">
                            <div class="list-group-item list-group-item-margined">@Model.Title</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2 list-group-label">
                            <strong>Price:</strong>
                        </div>
                        <div class="col-md-10">
                            <div class="list-group-item list-group-item-margined">@Model.Price.ToEuro()</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2 list-group-label">
                            <strong>Publish Date:</strong>
                        </div>
                        <div class="col-md-10">
                            <div class="list-group-item list-group-item-margined">@Model.PublishedDate.ToShortDateString()</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2 list-group-label">
                            <strong>Categories:</strong>
                        </div>
                        <div class="col-md-10">
                            <div class="list-group-item list-group-item-margined">@(Model.Categories.Any() ? string.Join("/", Model.Categories) : "No Categories")</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2  list-group-label">
                            <strong>Description:</strong>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="list-group-item list-group-item-margined description-details">@Model.Description</div>
                        </div>
                    </div>
                    <form class="form-inline" asp-controller="ShoppingCart" asp-action="AddToShoppingCart" asp-route-id="@Context.GetRouteValue("id")">
                        <div class="row  form-margin-row">
                            <button type="submit" class="btn btn-info btn-block" asp->Add Item to Cart</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
       BookDetailsModule.InitalizeModule(@Context.GetRouteValue("id"),@(User.Identity.IsAuthenticated ? 1 : 0))
    </script>
}